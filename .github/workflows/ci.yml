# This workflow will install dependencies, create coverage tests and run Pytest Coverage Commentator
# For more information see: https://github.com/coroo/pytest-coverage-commentator
name: CI
on:
  push:
    branches:
      - main
    paths:
      - "template_project/**"
      - "tests/**"
      - "badges/**"

  pull_request:
    branches:
      - main
    paths:
      - "template_project/**"
      - "tests/**"
      - "badges/**"

jobs:
  coverage:
    strategy:
      fail-fast: true
      matrix:
        python: ["3.9", "3.10"]
        os: [ubuntu-latest]
        include:
          - os: ubuntu-latest
            python: 3.10
            badgeTarget: true
    runs-on: ${{ matrix.os }}
    steps:
      - name: Print build information
        run: "echo head_ref: ${{ github.head_ref }}, ref: ${{ github.ref }}, os: ${{ matrix.os }}, python: ${{ matrix.python }}"

      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install library
        run: poetry install --no-interaction

      - name: Run tests
        run: poetry run pytest --cache-clear

      - name: Build coverage file
        if: ${{ matrix.badgeTarget }}
        run: poetry run pytest --cov-report term:skip-covered --cov-report term-missing --cache-clear --cov=template_project tests/ > pytest-coverage.txt

      - name: Comment coverage
        if: ${{ matrix.badgeTarget }}
        uses: coroo/pytest-coverage-commentator@v1.0.2
        with:
          pytest-coverage: pytest-coverage.txt

      - name: Coverage badge
        if: ${{ github.ref == 'refs/heads/main' && matrix.badgeTarget }}
        run: poetry run coverage-badge -fo badges/coverage.svg

      - name: Create badges pull request
        if: ${{ github.ref == 'refs/heads/main' && matrix.badgeTarget }}
        uses: peter-evans/create-pull-request@v4
        with:
          add-paths: |
            "badges/*.svg"
      #----------------------------------------------
      #             upload coverage stats
      # (requires CODECOV_TOKEN in repository secrets)
      #----------------------------------------------
      # - name: Test with pytest
      #   run: poetry run pytest --cov=<project-dir> --cov-report=xml

      # - name: Upload coverage
      #   uses: codecov/codecov-action@v1
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }} # Only required for private repositories
      #     file: ./coverage.xml
      #     fail_ci_if_error: true
